{"version":3,"sources":["scripts/main.js"],"names":["score","win","lose","board","initializeField","addRandomTile","updateField","document","querySelector","classList","add","textContent","emptyCells","r","c","push","row","column","length","cellRandom","Math","floor","random","querySelectorAll","forEach","cell","index","x","y","className","checkWin","remove","checkLose","move","direction","moved","moveUp","moveDown","moveLeft","moveRight","col","nextCol","mergeHorizontal","nextRow","mergeVertical","restart","addEventListener","typeOfEvent","key","isGameStarted","alert"],"mappings":"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","file":"main.0f7b5e5b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet score = 0;\nlet win = false;\nlet lose = false;\n\nconst board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction initializeField() {\n  addRandomTile();\n  addRandomTile();\n\n  score = 0;\n  win = false;\n  lose = false;\n\n  updateField();\n\n  document.querySelector('.message-start').classList.add('hidden');\n\n  document.querySelector('.button.start').textContent = 'Restart';\n\n  document.querySelector('.button.start').classList.add('restart');\n}\n\nfunction addRandomTile() {\n  const emptyCells = [];\n\n  for (let r = 0; r < 4; r++) {\n    for (let c = 0; c < 4; c++) {\n      if (board[r][c] === 0) {\n        emptyCells.push({\n          row: r,\n          column: c,\n        });\n      }\n    }\n  }\n\n  if (emptyCells.length === 0) {\n    return;\n  }\n\n  const cellRandom = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n  board[cellRandom.row][cellRandom.column] = Math.random() < 0.9\n    ? 2\n    : 4;\n}\n\nfunction updateField() {\n  const cells = document.querySelectorAll('.field-cell');\n\n  cells.forEach((cell, index) => {\n    const x = Math.floor(index / 4);\n    const y = index % 4;\n\n    cell.textContent = board[x][y] === 0\n      ? ''\n      : board[x][y];\n\n    cell.className = 'field-cell';\n\n    if (board[x][y] !== 0) {\n      cell.classList.add('field-cell--' + board[x][y]);\n    }\n  });\n\n  document.querySelector('.game-score').textContent = score;\n\n  if (checkWin()) {\n    win = true;\n\n    document.querySelector('.message-win').classList.remove('hidden');\n  } else if (checkLose()) {\n    lose = true;\n\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n}\n\nfunction move(direction) {\n  if (win || lose) {\n    return;\n  }\n\n  let moved = false;\n\n  switch (direction) {\n    case 'ArrowUp':\n      moved = moveUp();\n      break;\n\n    case 'ArrowDown':\n      moved = moveDown();\n      break;\n\n    case 'ArrowLeft':\n      moved = moveLeft();\n      break;\n\n    case 'ArrowRight':\n      moved = moveRight();\n      break;\n  }\n\n  if (moved) {\n    addRandomTile();\n    updateField();\n  }\n}\n\nfunction moveRight() {\n  let moved = false;\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 3; col++) {\n      if (board[row][col] !== 0) {\n        let nextCol = col + 1;\n\n        while (nextCol < 4 && nextCol === col + 1) {\n          if (board[row][nextCol] === 0) {\n            board[row][nextCol] = board[row][col];\n            board[row][col] = 0;\n            col = nextCol - 1;\n            moved = true;\n\n            moveRight();\n          } else if (board[row][nextCol] === board[row][col]) {\n            mergeHorizontal(nextCol, col, row);\n\n            moved = true;\n\n            break;\n          } else {\n            break;\n          }\n          nextCol++;\n        }\n      }\n    }\n  }\n\n  return moved;\n}\n\nfunction moveLeft() {\n  let moved = false;\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 3; col > 0; col--) {\n      if (board[row][col] !== 0) {\n        let nextCol = col - 1;\n\n        while (nextCol >= 0 && nextCol === col - 1) {\n          if (board[row][nextCol] === 0) {\n            board[row][nextCol] = board[row][col];\n            board[row][col] = 0;\n            col = nextCol;\n            moved = true;\n\n            moveLeft();\n          } else if (board[row][nextCol] === board[row][col]) {\n            mergeHorizontal(nextCol, col, row);\n\n            moved = true;\n\n            break;\n          } else {\n            break;\n          }\n          nextCol--;\n        }\n      }\n    }\n  }\n\n  return moved;\n}\n\nfunction moveDown() {\n  let moved = false;\n\n  for (let col = 0; col < 4; col++) {\n    for (let row = 2; row >= 0; row--) {\n      if (board[row][col] !== 0) {\n        let nextRow = row + 1;\n\n        while (nextRow < 4 && nextRow === row + 1) {\n          if (board[nextRow][col] === 0) {\n            board[nextRow][col] = board[row][col];\n            board[row][col] = 0;\n            row = nextRow;\n            moved = true;\n\n            moveDown();\n          } else if (board[nextRow][col] === board[row][col]) {\n            mergeVertical(nextRow, col, row);\n\n            moved = true;\n            break;\n          } else {\n            break;\n          }\n          nextRow++;\n        }\n      }\n    }\n  }\n\n  return moved;\n}\n\nfunction moveUp() {\n  let moved = false;\n\n  for (let col = 0; col < 4; col++) {\n    for (let row = 1; row < 4; row++) {\n      if (board[row][col] !== 0) {\n        let nextRow = row - 1;\n\n        while (nextRow >= 0 && nextRow === row - 1) {\n          if (board[nextRow][col] === 0) {\n            board[nextRow][col] = board[row][col];\n            board[row][col] = 0;\n            row = nextRow;\n            moved = true;\n\n            moveUp();\n          } else if (board[nextRow][col] === board[row][col]) {\n            mergeVertical(nextRow, col, row);\n\n            moved = true;\n            break;\n          } else {\n            break;\n          }\n          nextRow--;\n        }\n      }\n    }\n  }\n\n  return moved;\n}\n\nfunction mergeVertical(nextRow, col, row) {\n  board[nextRow][col] *= 2;\n  score += board[nextRow][col];\n  board[row][col] = 0;\n}\n\nfunction mergeHorizontal(nextCol, col, row) {\n  board[row][nextCol] *= 2;\n  score += board[row][nextCol];\n  board[row][col] = 0;\n}\n\nfunction checkWin() {\n  for (let r = 0; r < 4; r++) {\n    for (let c = 0; c < 4; c++) {\n      if (board[r][c] === 2048) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction checkLose() {\n  for (let r = 0; r < 4; r++) {\n    for (let c = 0; c < 4; c++) {\n      if (board[r][c] === 0) {\n        return false;\n      }\n\n      if (\n        (r < 3 && board[r][c] === board[r + 1][c])\n        || (c < 3 && board[r][c] === board[r][c + 1])\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\ndocument.addEventListener('keydown',\n  function(typeOfEvent) {\n    move(typeOfEvent.key);\n  });\n\ndocument.querySelector('.button.start').addEventListener(\n  'click', function() {\n    let isGameStarted = false;\n\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        if (board[r][c] !== 0) {\n          isGameStarted = true;\n          break;\n        }\n      }\n    }\n\n    if (isGameStarted === true) {\n      if (lose || win) {\n        restart();\n      } else {\n        const message = `Are you sure you want to start a new game? `\n        + `All progress will be lost.`;\n\n        alert(message);\n        restart();\n      }\n    } else {\n      initializeField();\n    }\n  });\n\nfunction restart() {\n  for (let r = 0; r < 4; r++) {\n    for (let c = 0; c < 4; c++) {\n      board[r][c] = 0;\n    }\n  }\n\n  score = 0;\n  win = false;\n  lose = false;\n\n  document.querySelector('.message-lose').classList.add('hidden');\n  document.querySelector('.message-win').classList.add('hidden');\n\n  initializeField();\n}\n"]}